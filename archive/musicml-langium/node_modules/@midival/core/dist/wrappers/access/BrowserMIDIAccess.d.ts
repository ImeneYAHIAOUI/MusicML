import { IMIDIAccess, InputStateChangeCallback, OutputStateChangeCallback } from "./IMIDIAccess";
import { IMIDIOutput } from "../outputs/IMIDIOutput";
import { IMIDIInput } from "../inputs/IMIDIInput";
import { UnregisterCallback } from "@hypersphere/omnibus";
export declare class BrowserMIDIAccess implements IMIDIAccess {
    private access;
    private bus;
    onInputConnected(callback: InputStateChangeCallback): UnregisterCallback;
    onInputDisconnected(callback: InputStateChangeCallback): UnregisterCallback;
    onOutputConnected(callback: OutputStateChangeCallback): UnregisterCallback;
    onOutputDisconnected(callback: OutputStateChangeCallback): UnregisterCallback;
    connect(sysex?: boolean): Promise<void>;
    get outputs(): IMIDIOutput[];
    get inputs(): IMIDIInput[];
    getInputById(inputId: string): IMIDIInput;
    getOutputById(outputId: string): IMIDIOutput;
    private listenOnStateChange;
}
