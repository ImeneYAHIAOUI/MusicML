"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.debounce = exports.throttle = exports.skipDuplicates = exports.filter = exports.delay = void 0;
const delay = (callback, delayInMs) => {
    return (...args) => {
        setTimeout(() => callback(...args), delayInMs);
    };
};
exports.delay = delay;
const filter = (callback, filterFunction) => {
    let previous = null;
    return (...args) => {
        if (filterFunction(args, previous)) {
            previous = args;
            callback(...args);
        }
    };
};
exports.filter = filter;
const compareObjects = (a, b) => {
    if (typeof a === "number"
        || typeof a === "string"
        || typeof a === "boolean"
        || typeof a === "bigint"
        || typeof a === "function"
        || typeof a === "symbol") {
        return a === b;
    }
    if (Array.isArray(a)) {
        if (!Array.isArray(b)) {
            return false;
        }
        return a.reduce((acc, val, idx) => {
            return acc && compareObjects(val, b[idx]);
        }, true);
    }
    if (typeof a === "object") {
        if (typeof b !== "object") {
            return false;
        }
        return Object.keys(a).reduce((acc, key) => {
            return acc && compareObjects(a[key], b[key]);
        }, true);
    }
};
const skipDuplicates = (callback) => {
    return exports.filter(callback, (a, b) => !compareObjects(a, b));
};
exports.skipDuplicates = skipDuplicates;
const throttle = (callback, timeInMs) => {
    let lastCallback = -1;
    return (...args) => {
        let time = Date.now();
        if (lastCallback + timeInMs < time) {
            lastCallback = time;
            callback(...args);
        }
    };
};
exports.throttle = throttle;
const debounce = (callback, timeInMs) => {
    let delayHandle = null;
    return (...args) => {
        if (delayHandle) {
            clearTimeout(delayHandle);
        }
        delayHandle = setTimeout(() => {
            callback(...args);
            delayHandle = null;
        }, timeInMs);
    };
};
exports.debounce = debounce;
//# sourceMappingURL=functions.js.map