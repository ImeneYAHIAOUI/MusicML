import { CallbackType } from "@hypersphere/omnibus";
import { MIDIValInput } from "../../MIDIValInput";
import { MPEInputZone } from "./MPEInputZone";
interface EventDefinitions {
    lowerZoneUpdate: [MPEInputZone];
    upperZoneUpdate: [MPEInputZone];
}
export interface MPEInputConfig {
    lowerZoneSize?: number;
    upperZoneSize?: number;
}
/**
 * Defines MIDIVal MPE Input connection
 */
export declare class MPEMidivalInput {
    #private;
    private readonly input;
    private eventBus;
    constructor(input: MIDIValInput, mpeDefaultZones?: MPEInputConfig);
    private instantiateLowerZone;
    private instantiateUpperZone;
    get isMpeEnabled(): boolean;
    get lowerZone(): MPEInputZone;
    get upperZone(): MPEInputZone;
    onLowerZoneUpdate(cb: CallbackType<EventDefinitions["lowerZoneUpdate"]>): import("@hypersphere/omnibus").UnregisterCallback;
    onUpperZoneUpdate(cb: CallbackType<EventDefinitions["upperZoneUpdate"]>): import("@hypersphere/omnibus").UnregisterCallback;
}
export {};
