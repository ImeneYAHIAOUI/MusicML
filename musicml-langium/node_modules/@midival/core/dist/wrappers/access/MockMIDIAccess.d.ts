import { IMIDIAccess, InputStateChangeCallback, OutputStateChangeCallback } from "./IMIDIAccess";
import { MockMIDIOutput } from "../outputs/MockMIDIOutput";
import { MidiDeviceProps, MockMIDIInput } from "../inputs/MockMIDIInput";
import { UnregisterCallback } from "../..";
export declare class MockMIDIAccess implements IMIDIAccess {
    private mockInputs;
    private mockOutputs;
    private bus;
    constructor();
    onInputConnected(callback: InputStateChangeCallback): UnregisterCallback;
    onInputDisconnected(callback: InputStateChangeCallback): UnregisterCallback;
    onOutputConnected(callback: OutputStateChangeCallback): UnregisterCallback;
    onOutputDisconnected(callback: OutputStateChangeCallback): UnregisterCallback;
    connect(): Promise<void>;
    get inputs(): MockMIDIInput[];
    get outputs(): MockMIDIOutput[];
    addInput(props: MidiDeviceProps): MockMIDIInput;
    removeInput(device: MockMIDIInput): void;
    addOutput(props: MidiDeviceProps): MockMIDIOutput;
    removeOutput(device: MockMIDIOutput): void;
}
