"use strict";
/*
 Mock for requestMIDIAccess function
*/
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const makeFakeInput = (name) => {
    return {
        name, // TODO: other fake stuff
    };
};
const makeFakeOutput = (name) => {
    return {
        name, // TODO: other fake stuff.
    };
};
const makeInputsMap = (options) => {
    const inputs = new Map();
    for (const inputName of options.inputs) {
        inputs.set(inputName, makeFakeInput(inputName));
    }
    return inputs;
};
const makeOutputsMap = (options) => {
    const outputs = new Map();
    for (const outputName of options.outputs) {
        outputs.set(outputName, makeFakeOutput(outputName));
    }
    return outputs;
};
exports.default = (options) => () => __awaiter(void 0, void 0, void 0, function* () {
    return {
        inputs: makeInputsMap(options),
        outputs: makeOutputsMap(options),
        onstatechange: null,
    };
});
