"use strict";
/******************************************************************************
 * This file was generated by langium-cli 1.0.0.
 * DO NOT EDIT MANUALLY!
 ******************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.reflection = exports.MusicMlAstReflection = exports.isTrack = exports.Track = exports.isTimeSignature = exports.TimeSignature = exports.isPitch = exports.Pitch = exports.isNote = exports.Note = exports.isNormalNote = exports.NormalNote = exports.isMusicPiece = exports.MusicPiece = exports.isGlobalDirective = exports.GlobalDirective = exports.isDrumNote = exports.DrumNote = exports.isBar = exports.Bar = void 0;
/* eslint-disable */
const langium_1 = require("langium");
exports.Bar = 'Bar';
function isBar(item) {
    return exports.reflection.isInstance(item, exports.Bar);
}
exports.isBar = isBar;
exports.DrumNote = 'DrumNote';
function isDrumNote(item) {
    return exports.reflection.isInstance(item, exports.DrumNote);
}
exports.isDrumNote = isDrumNote;
exports.GlobalDirective = 'GlobalDirective';
function isGlobalDirective(item) {
    return exports.reflection.isInstance(item, exports.GlobalDirective);
}
exports.isGlobalDirective = isGlobalDirective;
exports.MusicPiece = 'MusicPiece';
function isMusicPiece(item) {
    return exports.reflection.isInstance(item, exports.MusicPiece);
}
exports.isMusicPiece = isMusicPiece;
exports.NormalNote = 'NormalNote';
function isNormalNote(item) {
    return exports.reflection.isInstance(item, exports.NormalNote);
}
exports.isNormalNote = isNormalNote;
exports.Note = 'Note';
function isNote(item) {
    return exports.reflection.isInstance(item, exports.Note);
}
exports.isNote = isNote;
exports.Pitch = 'Pitch';
function isPitch(item) {
    return exports.reflection.isInstance(item, exports.Pitch);
}
exports.isPitch = isPitch;
exports.TimeSignature = 'TimeSignature';
function isTimeSignature(item) {
    return exports.reflection.isInstance(item, exports.TimeSignature);
}
exports.isTimeSignature = isTimeSignature;
exports.Track = 'Track';
function isTrack(item) {
    return exports.reflection.isInstance(item, exports.Track);
}
exports.isTrack = isTrack;
class MusicMlAstReflection extends langium_1.AbstractAstReflection {
    getAllTypes() {
        return ['Bar', 'DrumNote', 'GlobalDirective', 'MusicPiece', 'NormalNote', 'Note', 'Pitch', 'TimeSignature', 'Track'];
    }
    computeIsSubtype(subtype, supertype) {
        switch (subtype) {
            default: {
                return false;
            }
        }
    }
    getReferenceType(refInfo) {
        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;
        switch (referenceId) {
            default: {
                throw new Error(`${referenceId} is not a valid reference id.`);
            }
        }
    }
    getTypeMetaData(type) {
        switch (type) {
            case 'Bar': {
                return {
                    name: 'Bar',
                    mandatory: [
                        { name: 'notes', type: 'array' }
                    ]
                };
            }
            case 'DrumNote': {
                return {
                    name: 'DrumNote',
                    mandatory: [
                        { name: 'notes', type: 'array' }
                    ]
                };
            }
            case 'MusicPiece': {
                return {
                    name: 'MusicPiece',
                    mandatory: [
                        { name: 'tracks', type: 'array' }
                    ]
                };
            }
            case 'NormalNote': {
                return {
                    name: 'NormalNote',
                    mandatory: [
                        { name: 'pitches', type: 'array' }
                    ]
                };
            }
            case 'Track': {
                return {
                    name: 'Track',
                    mandatory: [
                        { name: 'bars', type: 'array' }
                    ]
                };
            }
            default: {
                return {
                    name: type,
                    mandatory: []
                };
            }
        }
    }
}
exports.MusicMlAstReflection = MusicMlAstReflection;
exports.reflection = new MusicMlAstReflection();
//# sourceMappingURL=ast.js.map